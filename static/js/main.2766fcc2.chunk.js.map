{"version":3,"sources":["SimpleCard.js","SignIn.js","app.js","index.js"],"names":["Alert","props","elevation","variant","useStyles","makeStyles","theme","root","minWidth","flexGrow","width","bullet","display","margin","transform","paper","height","left","title","fontSize","pos","marginTop","control","padding","spacing","SimpleCard","checkboxes","id","name","label","useState","Date","date","setChangeDate","selectedCheckboxes","setSelectedCheckboxes","setChecked","loading","setLoading","Array","length","fill","checkedState","setCheckedState","React","openBreadcrumbs","setOpenBreadcrumbs","handleBreadcrumbsClose","event","reason","classes","handleSubmitClick","a","console","log","myHeaders","Headers","append","raw","JSON","stringify","Parameters","format","toString","requestOptions","method","headers","body","redirect","fetch","POST_DATA","data","response","onClickChangeDate","onCheckBoxChange","position","updatedCheckedState","map","item","index","isChecked","includes","target","value","splice","indexOf","push","style","marginLeft","CircularProgress","Card","className","CardHeader","Paper","Grid","container","utils","DateFnsUtils","DatePicker","autoOk","orientation","openTo","onChange","i","FormControlLabel","Checkbox","checked","Button","color","marginBottom","onClick","Snackbar","open","autoHideDuration","onClose","severity","flexDirection","alignItems","avatar","backgroundColor","form","submit","mainColor","mainColorBd","borderColor","SignIn","Container","component","maxWidth","CssBaseline","Typography","noValidate","TextField","required","fullWidth","autoComplete","autoFocus","type","window","location","href","App","path","ReactDOM","render","document","querySelector","getElementById"],"mappings":"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","file":"static/js/main.2766fcc2.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // import\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { format } from \"date-fns\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 75,\n    flexGrow: 1,\n    width: \"35em\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  paper: {\n    height: 140,\n    width: 100,\n    left: \"25em\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginTop: 12\n  },\n  control: {\n    padding: theme.spacing(0)\n  }\n}));\n\nexport default function SimpleCard() {\n  const checkboxes = [\n    { id: \"1\", name: \"DDB\", label: \"DDB\" },\n    { id: \"180\", name: \"OPRG\", label: \"OPRG\" },\n    { id: \"179\", name: \"Eigen Fabrikaat\", label: \"Eigen Fabrikaat\" }\n  ];\n  const [date, setChangeDate] = useState(new Date());\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState([]);\n  const [checked, setChecked] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [checkedState, setCheckedState] = useState(\n    new Array(checkboxes.length).fill(false)\n  );\n  const [openBreadcrumbs, setOpenBreadcrumbs] = React.useState(false);\n  const handleBreadcrumbsClick = () => {\n    setOpenBreadcrumbs(true);\n  };\n  const handleBreadcrumbsClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenBreadcrumbs(false);\n  };\n  const classes = useStyles();\n\n  const handleSubmitClick = async (event) => {\n    console.log(\"1\");\n    if (loading === false) {\n      setLoading(true);\n    }\n    console.log(\"2\");\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Access-Control-Allow-Credentials\", \"true\");\n    myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n\n    var raw = JSON.stringify({\n      Parameters: {\n        \"1\": format(date, \"dd/MM/yyyy\"),\n        \"2\": selectedCheckboxes.toString()\n      }\n    });\n\n    console.log(\"RaW\" + raw);\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n\n    const POST_DATA = await fetch(\n      \"https://immense-shore-64867.herokuapp.com/https://ddb-databoard-functions-test.azurewebsites.net/api/ddb-databoard-downloader-test?code=RY8iEYBB%2Fwap%2FAMsaFikiRpLwsvzc%2FJM6BceWqhI4nwgPkQ7BslerA%3D%3D\",\n      requestOptions\n    );\n    const response = await POST_DATA.data;\n    await response;\n    console.log(response);\n    setLoading(false);\n    setOpenBreadcrumbs(true);\n  };\n\n  onClickChangeDate = (date) => {\n    setChangeDate(date);\n    console.log(\"meow \" + date);\n  };\n\n  onCheckBoxChange = (event, position) => {\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setCheckedState(updatedCheckedState);\n    const isChecked = selectedCheckboxes.includes(event.target.value);\n    setChecked(true);\n    if (!isChecked) {\n      selectedCheckboxes.push(event.target.value);\n    } else {\n      setChecked(false);\n      selectedCheckboxes.splice(\n        selectedCheckboxes.indexOf(event.target.value),\n        1\n      );\n    }\n    setSelectedCheckboxes(selectedCheckboxes);\n    console.log(selectedCheckboxes);\n  };\n  return (\n    <Fragment>\n      {loading && (\n        <div>\n          <h2 style={{ marginTop: \"2em\", marginLeft: \"2em\" }}>\n            Running Export ...\n          </h2>\n          <CircularProgress style={{ marginTop: \"4em\", marginLeft: \"7em\" }} />\n        </div>\n      )}\n      {!loading && (\n        <Card className={classes.root}>\n          <CardHeader title=\"HFM Databoards\" />\n          <Paper className={classes.control}>\n            <Grid container>\n              <Grid item>\n                <h2>Date</h2>\n              </Grid>\n              <Grid item>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DatePicker\n                    autoOk\n                    orientation=\"landscape\"\n                    openTo=\"date\"\n                    value={date}\n                    format=\"dd/MM/yyyy\"\n                    onChange={onClickChangeDate}\n                    style={{ marginTop: \"1em\", marginLeft: \"1em\" }}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n            </Grid>\n\n            <Grid item>\n              <h2>Companies</h2>\n            </Grid>\n            <Grid item>\n              {checkboxes.map((i) => {\n                return (\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        key={i.id}\n                        name={i.name}\n                        value={i.id}\n                        label={i.name}\n                        checked={checkedState[i.index]}\n                        onChange={onCheckBoxChange}\n                      />\n                    }\n                    label={i.name}\n                  />\n                );\n              })}\n            </Grid>\n\n            <Grid item style={{ marginLeft: \"13em\" }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{\n                  marginTop: \"3em\",\n                  marginLeft: \"1em\",\n                  marginBottom: \"1em\"\n                }}\n                value=\"React\"\n                onClick={handleSubmitClick}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Paper>\n        </Card>\n      )}\n      {openBreadcrumbs ? (\n        <Snackbar\n          open={openBreadcrumbs}\n          autoHideDuration={6000}\n          onClose={handleBreadcrumbsClose}\n        >\n          <Alert onClose={handleBreadcrumbsClose} severity=\"success\">\n            Databoards uploaded to storage!\n          </Alert>\n        </Snackbar>\n      ) : null}\n    </Fragment>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#00b8d4\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#00b8d4\"\r\n  },\r\n  mainColor: {\r\n    backgroundColor: \"#00b8d4\"\r\n  },\r\n  mainColorBd: {\r\n    borderColor: \"#00b8d4\"\r\n  }\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  const signInEvent = () => {\r\n    console.log(\"h\");\r\n    window.location.href = \"https://cc7i9.csb.app/SimpleCard\";\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          WorkBook Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"WorkBook User Name\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"WorkBook Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signInEvent}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nReactDOM.render(<SignIn />, document.querySelector(\"#root\"));\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SimpleCard from \"./SimpleCard\";\nimport SignIn from \"./SignIn\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/SignIn\">\n          <SignIn />\n        </Route>\n      </Switch>\n      <Switch>\n        <Route path=\"/SimpleCard\">\n          <SimpleCard />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}